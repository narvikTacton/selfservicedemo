# Tacton LeadGen and Customer Self Service
#
# The config.properties file contains application parameters connecting your LeadGen or Customer Self-service extranet, with your Tacton CPQ instance.
# Values in this file are only examples and must be changed to specific values relevent for your Tacton CPQ instance.
#
# * spring-boot related parameters:
#     spring.cache.type = cache type
#     server.port = server port number
#     logging.level.org.apache.http = logging level
#     spring.datasource.url = link to extranet database
#     spring.datasource.username = extranet database credential user
#     spring.datasource.password = extranet database credential password
#     spring.jpa.properties.hibernate.id.new_generator_mappings = false to prevent generate id by hibernate
#     spring.jpa.generate-ddl = true if automatic data definition language generation
#     spring.jpa.hibernate.ddl-auto = hibernate data definition language automation type
#     spring.jpa.database-platform = database platform type
#
# * LeadGen related parameters
#     leadgen_api_key = api key
#     leadgen_config_url = configurator url used by LeadGen
#     leadgen_needs_params = json object with parameters and values for Needs step in LeadGen
#        put values $select.country or $select.currency to allow user select attributes from list available in CPQ
#
# * Customer Self Service related parameters
#     cpq_instance_url = Tacton CPQ Front End url
#     customer_self_service_api_key = self service api key
#     customer_self_service_api_url = self service api url
#     css_needs_params = json object with parameters and values for Needs step in CSS,
#        put values $cart.installationCountry and $cart.currency to use attributes from cart
#
# * Customer Self Service default entities identifiers
#     css_default_account = default account id
#     css_default_country = default country id
#     css_default_currency = default currency id
#
# * Tacton CPQ API url and credentials
#     cpq_api_url = Tacton CPQ API url
#     cpq_user = Tacton CPQ api user credential
#     cpq_pass = Tacton CPQ api user password
#
# * Customer Self Service application parameters
#     demo_site_name = web application title
#     catalog_limit = catalog query limit limit
#     cart_limit = cart query limit limit
#     shop_initial_tab = initial catalog tab displayed in shop
#
# * Shared LeadGen and CSS Configurator parameters
#    product_name = configurable product name
#    product_id = configurable product id
#    summary_group_name = summary group nme
#
# * Customer Self Service configurator parameters
#    css_bom_columns = visible bom columns
#    css_bom_extra_info = extra info columns
#    css_bom_show_prices = 1 if prices visible
#
# * LeadGen configurator parameters
#    leadgen_bom_columns = visible bom columns
#    leadgen_bom_extra_info = extra info columns
#    leadgen_bom_show_prices = 1 if prices visible
#
# * Visualizer parameters
#    is_visualization_supported
#    visualization_image
#    visualization_group_name
#
# * Additional field names visible in Customer Self-service application
#   Additional columns header texts are in the messages.properties file in form
#    cart_columns.<field name>=Column header text
#    cart_list_headers.<field name>=Column header text
#    firm_quote_request_headers.<field name>=Column header text
#
# - visible on Cart page
#    cart_columns = list of fields visible in Cart
#    cart_totals = list of fields visible in Cart total
#    cart_percent_columns = list of fields formatted as percentage
#    cart_currency_columns = list of fields formatted as currency
#
# - visible on Cart List page
#    cart_list_columns = list of fields visible in Cart List
#    cart_list_percent_columns = list of fields formatted as percentage
#    cart_list_currency_columns = list of fields formatted as currency
#
# - visible on Firm Quote Request List pages
#    firm_quote_request_columns = list of fields visible in Firm Quote Request List
#    firm_quote_request_percent_columns = list of fields formatted as percentage
#    firm_quote_request_currency_columns = list of fields formatted as currency
#
# * Extranet administrator user name and credentials
#    admin_firstname = admin name
#    admin_lastname = admin last name
#    admin_username = admin user name
#    admin_password = admin password
#    admin_email = admin email
#

spring.cache.type=none

# Server
# App will be running on server behind Application Gateway that provides SSL
server.port=80
logging.level.org.apache.http=DEBUG

#configurator Leadgen
leadgen_api_key = ****
leadgen_config_url = https://selservice.tacton.com/configurator-api/
leadgen_needs_params = {}

#Customer Self-Service API
cpq_instance_url = https://p4fbd076-edu.earlyaccess.tactoncpq.com/!tickets~T-00000001
customer_self_service_api_key = dVeAIWh13m5Gq
customer_self_service_api_url = ${cpq_instance_url}/self-service-api-v1.2
css_needs_params = {}

#Customer Self-Service Default Entities
css_default_account=8752b3473f8e4800a494d4f0e95588bd
css_default_country=m29bf8c6ec21499cb3bfdc809b96e754
css_default_currency=m3575aebe4f7482e9486eec7a4f82a19

#Tacton CPQ API
cpq_api_url = ${cpq_instance_url}/api
cpq_user = narvik.sanchez
cpq_pass = All1s0n25Al3x04!

# CSS parameters
demo_site_name=Customer Self Service Demo
catalog_limit = 15
cart_limit = 20
shop_initial_tab = Product

#configurable product and properties for both Leadgen and CSS configurator
product_name = name
product_id = externalId
summary_group_name = description

# visualizer link
is_visualization_supported = 1
visualization_image =
visualization_group_name =

#information what additional fields from ShoppingCartItem object are visible on cart page
cart_columns=name,summary,qty,price,listPrice,imageURL,description
cart_totals=listPrice
cart_percent_columns=frameAgreementPercent,rebatePercent
cart_currency_columns=listPrice

#information what additional fields from ShoppingCart object are visible on cart list page
cart_list_columns=externalId,name,currency,description,productId,totalPrice,description
cart_list_percent_columns=avgFrameAgreementPercent,avgRebatePercent
cart_list_currency_columns=currency

#information what additional fields from FirmProposalRequest object are visible on firm quote request list page
firm_quote_request_columns=totalQuantifiedLocalListPrice,avgFrameAgreementPercent,avgRebatePercent,totalNetPricePerMonth,totalNetPrice
firm_quote_request_percent_columns=avgFrameAgreementPercent,avgRebatePercent
firm_quote_request_currency_columns=totalQuantifiedLocalListPrice,totalNetPricePerMonth,totalNetPrice

#In data.pricing returned by CSS API
css_bom_columns = [{"articleNumber": "productId", "price": "listPrice"}]
css_bom_extra_info = [{"name":"name", "key": "id"}, "description": "description"]
css_bom_show_prices = 1

#In data.bom returned by LeadGen API
leadgen_bom_columns = [{"articleNumber": "artNo", "price": "listPrice"}]
leadgen_bom_extra_info = [{"name":"Article no", "key": "artNo"}]
leadgen_bom_show_prices = 0

#Product's images are displayed in html templates from resources/static/img/products/ or from outside of app context from /products directory
#for development and running from IDE it should remain = 0
products_images_from_outside = 1


#Extranet Admin users (user will be updated with these each time app is started)
admin_firstname = Mark
admin_lastname = Hughes
admin_username = mark.hughes@tactonmail.com
admin_password = 
admin_email = mark.hughes@tactonmail.com


#database
spring.datasource.url=jdbc:mysql://localhost/css?serverTimezone=UTC
spring.datasource.username= root
spring.datasource.password= M1dn41992!

spring.jpa.show-sql=false

#prevent hibernate from looking for hibernate_sequence
spring.jpa.properties.hibernate.id.new_generator_mappings=false

# Check database schema and create/update if needed
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update

spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

server.max-http-request-header-size=20000
